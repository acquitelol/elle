function l $input(l %message_1) {
@start
	%tmp_4 =l call $fdopen(w 0, l $input_3)
	%stdin_2 =l copy %tmp_4
	%buf_6 =l copy $buf_5
	%tmp_7 =w call $printf(l %message_1)
	%tmp_8 =w call $fgets(l %buf_6, w 1024, l %stdin_2)
	%tmp_10 =l call $strlen(l %buf_6)
	%len_9 =l copy %tmp_10
	%tmp_12 =l copy %len_9
	%tmp_13 =l copy 1
	%tmp_14 =l sub %tmp_12, %tmp_13
	%index_11 =l copy %tmp_14
	%tmp_16 =l copy %buf_6
	%tmp_17 =l copy %index_11
	%tmp_18 =l add %tmp_16, %tmp_17
	%newline_15 =l copy %tmp_18
	storeb 0, %newline_15
	%r_v18_19 =l copy %buf_6
	ret %r_v18_19
}
function l $isEven(l %n_20) {
@start
	%tmp_21 =l copy %n_20
	%tmp_22 =l copy 2
	%tmp_23 =l rem %tmp_21, %tmp_22
	%tmp_24 =l copy %tmp_23
	%tmp_25 =l copy 0
	%tmp_26 =l ceqw %tmp_24, %tmp_25
	%r_v26_27 =l copy %tmp_26
	ret %r_v26_27
}
function l $fib(l %n_28) {
@start
	%tmp_29 =l copy %n_28
	%tmp_30 =l copy 1
	%tmp_31 =l cslew %tmp_29, %tmp_30
	jnz %tmp_31, @ift_32, @end_32
@ift_32
	%r_v32_33 =l copy %n_28
	ret %r_v32_33
@end_32
	%tmp_34 =l copy %n_28
	%tmp_35 =l copy 1
	%tmp_36 =l sub %tmp_34, %tmp_35
	%tmp_37 =l call $fib(l %tmp_36)
	%tmp_38 =l copy %n_28
	%tmp_39 =l copy 2
	%tmp_40 =l sub %tmp_38, %tmp_39
	%tmp_41 =l call $fib(l %tmp_40)
	%tmp_42 =l copy %tmp_37
	%tmp_43 =l copy %tmp_41
	%tmp_44 =l add %tmp_42, %tmp_43
	%r_v44_45 =l copy %tmp_44
	ret %r_v44_45
}
function l $fact(l %n_46) {
@start
	%tmp_47 =l copy %n_46
	%tmp_48 =l copy 1
	%tmp_49 =l cslew %tmp_47, %tmp_48
	jnz %tmp_49, @ift_50, @end_50
@ift_50
	%r_v50_51 =l copy %n_46
	ret %r_v50_51
@end_50
	%tmp_52 =l copy %n_46
	%tmp_53 =l copy 1
	%tmp_54 =l sub %tmp_52, %tmp_53
	%tmp_55 =l call $fact(l %tmp_54)
	%tmp_56 =l copy %n_46
	%tmp_57 =l copy %tmp_55
	%tmp_58 =l mul %tmp_56, %tmp_57
	%r_v58_59 =l copy %tmp_58
	ret %r_v58_59
}
function l $exp(l %n_60, l %p_61) {
@start
	%i_62 =w copy 0
	%res_63 =l copy 1
@loop_64_cond
	%tmp_65 =w copy %i_62
	%tmp_66 =w copy %p_61
	%tmp_67 =w csltw %tmp_65, %tmp_66
	jnz %tmp_67, @loop_64_body, @loop_64_end
@loop_64_body
	%tmp_68 =l copy %res_63
	%tmp_69 =l copy %n_60
	%tmp_70 =l mul %tmp_68, %tmp_69
	%res_63 =l copy %tmp_70
	%tmp_71 =w copy %i_62
	%tmp_72 =w copy 1
	%tmp_73 =w add %tmp_71, %tmp_72
	%i_62 =w copy %tmp_73
	jmp @loop_64_cond
@loop_64_end
	%r_v73_74 =l copy %res_63
	ret %r_v73_74
}
export function w $main() {
@start

@loop_75_cond
	jnz 1, @loop_75_body, @loop_75_end
@loop_75_body
	%tmp_78 =l call $input(l $main_77)
	%userInput_76 =l copy %tmp_78
	%tmp_80 =l call $atol(l %userInput_76)
	%number_79 =l copy %tmp_80
	%tmp_81 =l copy %number_79
	%tmp_82 =l copy 0
	%tmp_83 =l ceqw %tmp_81, %tmp_82
	%tmp_84 =l copy %number_79
	%tmp_85 =l copy 40
	%tmp_86 =l csgtw %tmp_84, %tmp_85
	%tmp_87 =l copy %tmp_83
	%tmp_88 =l copy %tmp_86
	%tmp_89 =l or %tmp_87, %tmp_88
	jnz %tmp_89, @ift_90, @end_90
@ift_90
	%tmp_92 =w call $printf(l $main_91, ..., l %number_79)
	jmp @loop_75_cond
@end_90
	%tmp_94 =l call $fact(l %number_79)
	%tmp_95 =w call $printf(l $main_93, ..., l %number_79, l %tmp_94)
	%tmp_97 =l call $fib(l %number_79)
	%tmp_98 =w call $printf(l $main_96, ..., l %number_79, l %tmp_97)
	%tmp_100 =l call $exp(l %number_79, w 2)
	%tmp_101 =w call $printf(l $main_99, ..., l %number_79, l %tmp_100)
	%res_102 =l copy $main_103
	%tmp_104 =l call $isEven(l %number_79)
	jnz %tmp_104, @ift_105, @iff_105
@ift_105
	%res_102 =l copy $main_106
	jmp @end_105
@iff_105
	%res_102 =l copy $main_107
@end_105
	%tmp_109 =w call $printf(l $main_108, ..., l %number_79, l %res_102)
	jmp @loop_75_cond
@loop_75_end
	ret
}
data $input_3 = { b "r", b 0 }
data $buf_5 = { z 1024 }
data $main_77 = { b "Enter a number -> ", b 0 }
data $main_91 = { b "Invalid input: %d\n", b 0 }
data $main_93 = { b "fact(%ld) = %ld\n", b 0 }
data $main_96 = { b "fib(%ld) = %ld\n", b 0 }
data $main_99 = { b "exp(%ld, 2) = %ld\n", b 0 }
data $main_103 = { b "", b 0 }
data $main_106 = { b "true", b 0 }
data $main_107 = { b "false", b 0 }
data $main_108 = { b "isEven(%ld) = %s\n\n", b 0 }
