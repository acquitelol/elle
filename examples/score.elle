const int BUF_SIZE = 256;
external fn printf(char *formatter, ...);

fn input(char *message) -> char * {
    long stdin = fdopen(0, "r");
    char *buf = malloc(BUF_SIZE * #size(char));
    defer free(buf);

    printf(message);
    fgets(buf, BUF_SIZE, stdin);
    buf[strlen(buf) - 1] = '\0';

    char *result = malloc(strlen(buf) + 1);
    strcpy(result, buf);
    return result;
}

fn input_as_int(char *message) -> int {
    char *res = input(message);
    defer free(res);

    if (strspn(res, "0123456789") != strlen(res)) {
        long stderr = fdopen(2, "w");
        fprintf(stderr, "Invalid input: '%s'. Falling back to 0\n", res);
        return 0;
    }

    int converted = atoi(res);
    return converted;
}

pub fn main() {
    int highestScore = 0;
    char *winner = malloc(BUF_SIZE * #size(char));
    defer free(winner);

    while true {
        char *person = input("Enter a person's name: ");
        defer free(person);

        if (strcmp(person, "stop") == 0) {
            break;
        }

        printf("Enter %s's score: ", person);
        int score = input_as_int("");

        if score > highestScore {
            highestScore = score;
            strcpy(winner, person);
        }
    }

    printf("The winner is %s with a score of %d\n", winner, highestScore);
    return 0;
}
