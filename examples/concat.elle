external fn printf(string formatter, ...);

fn concat(int size, ...) {
    variadic args[size * #size(string)];
    defer free(args);

    string strings[size];
    int sizes[size];
    long length = 0;

    // Collect the strings and the final string length
    for int i = 0; i < size; i++ {
        strings[i] = args yield string;
        sizes[i] = strlen(strings[i]);
        length += sizes[i];
    }

    string result = malloc((length + 1) * #size(char));
    int index = 0;

    // Construct the final string
    for int i = 0; i < size; i++ {
        string current = strings[i];

        for int j = 0; j < sizes[i]; j++ {
            result[index] = current[j];
            index++;
        }
    }

    // Include null terminator
    result[index] = '\0';
    return result;
}

fn main() {
    string res = concat.(
        "‎ ‎╱|、\n",
        "(˚ˎ 。7\n",
        "|、˜〵\n",
        "じしˍ,)ノ\n"
    );

    printf("%s", res);
}
